/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dbd_lcd.gui.form.barang;

import dbd_lcd.PopupRunnable;
import dbd_lcd.RequireLoginRunnable;
import dbd_lcd.Util;
import dbd_lcd.gui.MyTableModel;
import dbd_lcd.system.structs.Barang;
import dbd_lcd.system.structs.filter.FilterBarang;
import javax.swing.JLabel;
import dbd_lcd.gui.MyPanel;
import java.awt.Component;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author user
 */
public class DaftarBarangPanel extends MyPanel {

    /**
     * Creates new form DaftarBarangPanel
     */
    FilterBarang filter = new FilterBarang();
    Barang[] data = new Barang[0];
    public DaftarBarangPanel() {
        initComponents();
        filter.tipe = Barang.Tipe.LCD;
    }

    public void determineCellColor(JLabel comp, int row, int col, boolean selected){
        switch(col){
            case 1:{
                switch(data[row].getStatus()){
                    case Barang.Status.DIPINJAM:{
                        comp.setBackground(Util.ColorPack.YELLOW.get(selected));
                        break;
                    }
                    case Barang.Status.ADA:{
                        comp.setBackground(Util.ColorPack.GREEN.get(selected));
                        break;
                    }
                    case Barang.Status.RUSAK:{
                        comp.setBackground(Util.ColorPack.RED.get(selected));
                        break;
                    }
                    default:{
                        comp.setBackground(Util.ColorPack.WHITE.get(selected));
                        break;
                    }
                }
                break;
            }
            default:{
                comp.setBackground(Util.ColorPack.WHITE.get(selected));
                break;
            }
        }
        if(col == 2){
            comp.setToolTipText(data[row].getKeterangan());
        }
        if(col == 1 && data[row].getStatus().equals(Barang.Status.DIPINJAM)){
            comp.setToolTipText(""+data[row].getNomorPeminjaman());
        }
    }
    
    
    public void refresh(){
        kabelButton.setEnabled(!Barang.Tipe.KABEL.equals(filter.tipe));
        lcdButton.setEnabled(!Barang.Tipe.LCD.equals(filter.tipe));
        if(filter.tipe.equals(Barang.Tipe.KABEL)) titleLabel.setText("Kabel");
        if(filter.tipe.equals(Barang.Tipe.LCD)) titleLabel.setText("LCD Proyektor");
        fetch();
    }
    
    public void fetch(){
        Barang[] bs = Barang.fetch(filter);
        MyTableModel dtm = new MyTableModel();
        dtm.addColumn("Nomor");
        dtm.addColumn("Status");
        dtm.addColumn("Keterangan");
        
        for(int i = 0; i < bs.length; ++i){
            Barang b = bs[i];
            dtm.addRow(new Object[]{
                b.getNomor(), 
                b.getStatusString(), 
                b.getKeterangan()
            });
        }
        data = bs;
        barangTable.setModel(dtm);
    }
    
    public void lihatBarang(){
        
        int row = barangTable.getSelectedRow();
        if(row < 0) return;
        
        lihatBarang(row);
    }
    
    public void lihatBarang(int index){
        DetailBarangFrame db = new DetailBarangFrame();
        db.load(data[index]);
        db.setOnDispose(new PopupRunnable(){
            @Override
            public boolean run(boolean success){
                if(success){
                    refresh();
                }
                return true;
            }
        });
        
        getFrame().setPopup(db);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        titleLabel = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lcdButton = new javax.swing.JButton();
        kabelButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        barangTable = new javax.swing.JTable(){
            @Override
            public Component prepareRenderer(TableCellRenderer renderer, int row, int col) {
                JLabel comp = (JLabel)super.prepareRenderer(renderer, row, col);
                determineCellColor(comp, convertRowIndexToModel(row), convertColumnIndexToModel(col), Util.contains(getSelectedRows(), row));
                return comp;
            }
        };
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        filterButton = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jPanel5 = new javax.swing.JPanel();
        viewButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 102, 102));
        setLayout(new java.awt.GridBagLayout());

        titleLabel.setBackground(new java.awt.Color(255, 153, 0));
        titleLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 27)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(255, 255, 255));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Barang");
        titleLabel.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        add(titleLabel, gridBagConstraints);

        jPanel6.setOpaque(false);
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel2.setOpaque(false);

        lcdButton.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        lcdButton.setText("Proyektor");
        lcdButton.setOpaque(false);
        lcdButton.setSelected(true);
        lcdButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lcdButtonActionPerformed(evt);
            }
        });
        jPanel2.add(lcdButton);

        kabelButton.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        kabelButton.setText("Kabel");
        kabelButton.setOpaque(false);
        kabelButton.setSelected(true);
        kabelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kabelButtonActionPerformed(evt);
            }
        });
        jPanel2.add(kabelButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel6.add(jPanel2, gridBagConstraints);

        barangTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nomor", "Status", "Keterangan"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        barangTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                barangTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(barangTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanel6.add(jScrollPane1, gridBagConstraints);

        jPanel3.setOpaque(false);
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel4.setOpaque(false);

        filterButton.setBackground(new java.awt.Color(255, 153, 0));
        filterButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        filterButton.setText("Filter");
        filterButton.setOpaque(false);
        filterButton.setSelected(true);
        filterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterButtonActionPerformed(evt);
            }
        });
        jPanel4.add(filterButton);

        jPanel3.add(jPanel4, new java.awt.GridBagConstraints());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(filler1, gridBagConstraints);

        jPanel5.setOpaque(false);

        viewButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dbd_lcd/gui/image/KC PMBESAR.png"))); // NOI18N
        viewButton.setContentAreaFilled(false);
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });
        jPanel5.add(viewButton);

        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dbd_lcd/gui/image/TAMBAH.png"))); // NOI18N
        addButton.setContentAreaFilled(false);
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        jPanel5.add(addButton);

        jPanel3.add(jPanel5, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(jPanel6, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void lcdButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lcdButtonActionPerformed
        // TODO add your handling code here:
        filter.tipe = Barang.Tipe.LCD;
        refresh();
    }//GEN-LAST:event_lcdButtonActionPerformed

    private void kabelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kabelButtonActionPerformed
        // TODO add your handling code here:
        filter.tipe = Barang.Tipe.KABEL;
        refresh();
    }//GEN-LAST:event_kabelButtonActionPerformed

    private void barangTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_barangTableMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() != 2) return;
        lihatBarang();
    }//GEN-LAST:event_barangTableMouseClicked

    private void filterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterButtonActionPerformed
        // TODO add your handling code here:
        FilterBarangFrame fpf = new FilterBarangFrame();
        fpf.load(filter);
        fpf.setOnDispose(new PopupRunnable(){
            @Override
            public boolean run(boolean success){
                if(success){
                    filter = fpf.read();
                    refresh();
                }
                return true;
            }
        });
        setPopup(fpf);
    }//GEN-LAST:event_filterButtonActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        // TODO add your handling code here:
        lihatBarang();
    }//GEN-LAST:event_viewButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        setEnabled(false);
        TambahBarang tb = new TambahBarang();
        tb.setOnDispose(new RequireLoginRunnable(){
            @Override
            public void onLogin(){
                Barang b = tb.read();
                try{
                    b.insert();
                    tb.dispose();
                    refresh();
                }catch(Exception ex){
                    Util.handleError(tb, ex);
                }
            }
        });
        setPopup(tb);
    }//GEN-LAST:event_addButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTable barangTable;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton filterButton;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton kabelButton;
    private javax.swing.JButton lcdButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables
}
