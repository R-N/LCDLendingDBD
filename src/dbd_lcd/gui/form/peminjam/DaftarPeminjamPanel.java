/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dbd_lcd.gui.form.peminjam;

import dbd_lcd.PopupRunnable;
import dbd_lcd.Util;
import dbd_lcd.gui.MyTableModel;
import dbd_lcd.gui.form.PeriodPicker;
import dbd_lcd.report.MyJasperViewer;
import dbd_lcd.system.structs.Peminjam;
import dbd_lcd.system.structs.filter.FilterPeminjam;
import java.awt.Component;
import java.util.HashMap;
import javax.swing.JLabel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author user
 */
public class DaftarPeminjamPanel extends dbd_lcd.gui.MyPanel {

    /**
     * Creates new form DaftarPeminjamPanel
     */
    FilterPeminjam filter = new FilterPeminjam();
    Peminjam[] data = new Peminjam[0];
    public DaftarPeminjamPanel() {
        initComponents();
    }

    public void determineCellColor(JLabel comp, int row, int col, boolean selected){
        switch(col){
            case 0:{
                comp.setBackground(data[row].getBlacklistColor().get(selected));
                if(data[row].isPeminjamTerblacklist()){
                    comp.setToolTipText(data[row].getKeteranganBlacklist());
                }
                break;
            }
            default:{
                comp.setBackground(Util.ColorPack.WHITE.get(selected));
                break;
            }
        }
        
    }
    
    public void refresh(){
        Peminjam[] pms = Peminjam.fetch(filter);
        
        MyTableModel dtm = new MyTableModel();
        dtm.addColumn("Nomor Identitas");
        dtm.addColumn("Nama");
        dtm.addColumn("Nomor HP");
        for(int i = 0; i < pms.length; ++i){
            Peminjam pm = pms[i];
            dtm.addRow(new Object[]{
                pm.getIdPeminjam(),
                pm.getNamaPeminjam(),
                pm.getNomorHpPeminjam()
            });
        }
        
        data = pms;
        TabelPeminjam.setModel(dtm);
    }
    
    public void lihatPeminjam(){
        int row = TabelPeminjam.getSelectedRow();
        if(row < 0) return;
        
        lihatPeminjam(row);
    }
    
    public void lihatPeminjam(int index){
        Peminjam pm = data[index];
        DetailPeminjamFrame tup = new DetailPeminjamFrame();
        tup.setOnDispose(new PopupRunnable(){
            @Override
            public boolean run(boolean success){
                if(success){
                    refresh();
                }
                return true;
            }
        });
        tup.load(pm);
        setPopup(tup);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelPeminjam = new javax.swing.JTable(){
            @Override
            public Component prepareRenderer(TableCellRenderer renderer, int row, int col) {
                JLabel comp = (JLabel)super.prepareRenderer(renderer, row, col);
                determineCellColor(comp, convertRowIndexToModel(row), convertColumnIndexToModel(col), Util.contains(getSelectedRows(), row));
                return comp;
            }
        };
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        filterButton = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jPanel5 = new javax.swing.JPanel();
        blacklistButton = new javax.swing.JButton();
        viewButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 102, 102));
        setLayout(new java.awt.GridBagLayout());

        jLabel1.setBackground(new java.awt.Color(255, 153, 0));
        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 26)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Peminjam");
        jLabel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jLabel1.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(jLabel1, gridBagConstraints);

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        TabelPeminjam.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        TabelPeminjam.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nama", "No. HP"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TabelPeminjam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelPeminjamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TabelPeminjam);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 515;
        gridBagConstraints.ipady = 239;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(18, 9, 0, 0);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jPanel3.setOpaque(false);
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel4.setOpaque(false);

        filterButton.setBackground(new java.awt.Color(255, 153, 0));
        filterButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        filterButton.setText("Filter");
        filterButton.setOpaque(false);
        filterButton.setSelected(true);
        filterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterButtonActionPerformed(evt);
            }
        });
        jPanel4.add(filterButton);

        jPanel3.add(jPanel4, new java.awt.GridBagConstraints());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(filler1, gridBagConstraints);

        jPanel5.setOpaque(false);

        blacklistButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dbd_lcd/gui/image/SILANG.png"))); // NOI18N
        blacklistButton.setContentAreaFilled(false);
        blacklistButton.setMaximumSize(new java.awt.Dimension(46, 46));
        blacklistButton.setMinimumSize(new java.awt.Dimension(46, 46));
        blacklistButton.setPreferredSize(new java.awt.Dimension(46, 46));
        blacklistButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blacklistButtonActionPerformed(evt);
            }
        });
        jPanel5.add(blacklistButton);

        viewButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dbd_lcd/gui/image/KC PMBESAR.png"))); // NOI18N
        viewButton.setContentAreaFilled(false);
        viewButton.setMaximumSize(new java.awt.Dimension(46, 46));
        viewButton.setMinimumSize(new java.awt.Dimension(46, 46));
        viewButton.setPreferredSize(new java.awt.Dimension(46, 46));
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });
        jPanel5.add(viewButton);

        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dbd_lcd/gui/image/TAMBAH.png"))); // NOI18N
        addButton.setContentAreaFilled(false);
        addButton.setMaximumSize(new java.awt.Dimension(46, 46));
        addButton.setMinimumSize(new java.awt.Dimension(46, 46));
        addButton.setPreferredSize(new java.awt.Dimension(46, 46));
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        jPanel5.add(addButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel3.add(jPanel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        add(jPanel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void blacklistButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blacklistButtonActionPerformed
        // TODO add your handling code here:
        int row = TabelPeminjam.getSelectedRow();
        if(row < 0) return;
        Peminjam pm = data[row];
        BlacklistPeminjam bp = new BlacklistPeminjam();
        bp.load(pm);
        bp.setOnDispose(new PopupRunnable(){
            @Override
            public boolean run(boolean success){
                if(success){
                    refresh();
                }
                return true;
            }
        });
        setPopup(bp);
    }//GEN-LAST:event_blacklistButtonActionPerformed

    private void TabelPeminjamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelPeminjamMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() != 2) return;
        lihatPeminjam();
    }//GEN-LAST:event_TabelPeminjamMouseClicked

    private void filterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterButtonActionPerformed
        // TODO add your handling code here:
        FilterPeminjamFrame fpf = new FilterPeminjamFrame();
        fpf.load(filter);
        fpf.setOnDispose(new PopupRunnable(){
            @Override
            public boolean run(boolean success){
                if(success){
                    filter = fpf.read();
                    refresh();
                }
                return true;
            }
        });
        setPopup(fpf);
    }//GEN-LAST:event_filterButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        setEnabled(false);
        DetailPeminjamFrame tp = new DetailPeminjamFrame();
        tp.setOnDispose(new PopupRunnable(){
            @Override
            public boolean run(boolean success){
                if(success){
                    refresh();
                }
                return true;
            }
        });
        setPopup(tp);
    }//GEN-LAST:event_addButtonActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        // TODO add your handling code here:
        lihatPeminjam();
    }//GEN-LAST:event_viewButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabelPeminjam;
    private javax.swing.JButton addButton;
    private javax.swing.JButton blacklistButton;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton filterButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables
}
